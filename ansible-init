#!/usr/bin/env python3
import os
import difflib
from pathlib import Path


project = os.path.basename(os.getcwd()).replace("-infrastructure", "")
readme = .format(project, os.path.basename(os.getcwd()), os.getcwd())

envrc = .format(project)

requirements_yml = 

requirements_txt = 

ansible_lint = 

yamllint=

precommit=

ansible_cfg = 

vault_password_file = 

gitignore = 

def diff(string_list, index_a=0, index_b=None, print_only=True):
    """
    Print or return a colour-coded diff of two items in a list of strings.
    Default: Compare first and last strings; print the output; return None.
    """
    index_b = index_b or len(string_list) -1
    green = '\x1b[38;5;16;48;5;2m'
    red = '\x1b[38;5;16;48;5;1m'
    end = '\x1b[0m'
    output = []
    string_a = string_list[index_a]
    string_b = string_list[index_b]
    matcher = difflib.SequenceMatcher(None, string_a, string_b)
    for opcode, a0, a1, b0, b1 in matcher.get_opcodes():
        if opcode == "equal":
            output += [string_a[a0:a1]]
        elif opcode == "insert":
            output += [green + string_b[b0:b1] + end]
        elif opcode == "delete":
            output += [red + string_a[a0:a1] + end]
        elif opcode == "replace":
            output += [green + string_b[b0:b1] + end]
            output += [red + string_a[a0:a1] + end]
    output = "".join(output)
    if not print_only:
        return output
    print(f"\n{output}\n")


def write_config(contents, filepath):
    fullpath = os.path.join(os.getcwd(), filepath)
    if os.path.isfile(fullpath):
        with open(fullpath, "r+") as targetfile:
            fcontents = targetfile.read()
        if fcontents != contents:
            diff([fcontents, contents])
            replace = None
            print("Replace the file {}? (y/n/a)".format(fullpath))
            while replace not in ("y", "n", "a"):
                if replace == "a":
                    with open(fullpath, "w") as targetfile:
                        targetfile.write(contents)
                    break
                else:
                    replace = input()
                if replace == "y":
                    with open(fullpath, "w") as targetfile:
                        targetfile.write(contents)
                elif replace == "n":
                    exit(0)
                else:
                    print("Please type either 'y' or 'n'")

    else:
        with open(fullpath, "w") as targetfile:
            targetfile.write(contents)


for i in ["roles", "group_vars"]:
    Path(os.path.join(os.getcwd(), i)).mkdir(parents=True, exist_ok=True)
    
write_config(envrc, ".envrc")
write_config(requirements_yml, "requirements.yml")
write_config(requirements_txt, "requirements.txt")
write_config(ansible_lint, ".ansible-lint")
write_config(ansible_cfg, "ansible.cfg")
write_config(yamllint, ".yamllint")
write_config(precommit, ".pre-commit-config.yaml")
write_config(gitignore, ".gitignore")
write_config(vault_password_file, "vault_password_file")

os.system('direnv allow')
os.system('pre-commit install')
